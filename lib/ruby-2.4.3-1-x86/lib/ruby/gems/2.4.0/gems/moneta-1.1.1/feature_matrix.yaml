---
group: Persistent stores
features: [ persist ]
notes:
  poor multiprocess performance: >
    Sqlite/YAML/PStore are multiprocess safe, but the performance suffers badly
    since the whole database file must be locked for writing. Use a key/value
    server if you want multiprocess concurrency!
backends:
  - adapter: Mongo
    platforms: [ MRI, JRuby ]
    gems: mongo or moped
    features: [ threadsafe, multiprocess, increment, create, expires, each_key, bulk_read, bulk_write ]
    description: "[MongoDB](http://www.mongodb.org/) database"
  - adapter: MongoOfficial
    platforms: [ MRI, JRuby ]
    gems: mongo
    features: [ threadsafe, multiprocess, increment, create, expires, each_key, bulk_read, bulk_write ]
    description: "[MongoDB](http://www.mongodb.org/) database"
  - adapter: MongoMoped
    platforms: [ MRI, JRuby ]
    gems: moped
    features: [ threadsafe, multiprocess, increment, create, expires, each_key, bulk_read, bulk_write ]
    description: "[MongoDB](http://www.mongodb.org/) database"
  - adapter: Redis
    platforms: [ MRI, JRuby ]
    gems: redis
    features: [ threadsafe, multiprocess, increment, create, expires, each_key, bulk_read, bulk_write ]
    description: "[Redis](http://redis.io/) database"
  - adapter: ActiveRecord
    platforms: [ MRI, JRuby ]
    gems: activerecord
    features: [ threadsafe, multiprocess, increment, create, each_key, bulk_read, bulk_write ]
    description: "[ActiveRecord](https://rubygems.org/gems/activerecord) ORM"
  - adapter: File
    platforms: [ MRI, JRuby ]
    features: [ threadsafe, multiprocess, increment, create, each_key ]
    description: "File store"
  - adapter: LMDB
    platforms: [ MRI ]
    gems: lmdb
    features: [ threadsafe, multiprocess, increment, create, each_key, bulk_read, bulk_write ]
    description: "[Symas Lightning Memory-Mapped Database (LMDB)](http://symas.com/mdb/)"
  - adapter: Sequel
    platforms: [ MRI, JRuby ]
    gems: sequel
    features: [ threadsafe, multiprocess, increment, create, each_key, bulk_read, bulk_write ]
    description: "[Sequel](http://sequel.rubyforge.org/) ORM"
  - adapter: TokyoTyrant
    platforms: [ MRI, JRuby ]
    gems: tokyotyrant or ruby-tokyotyrant
    features: [ multiprocess, increment, create, bulk_read ]
    description: "[TokyoTyrant](http://fallabs.com/tokyotyrant/) database"
  - adapter: PStore
    platforms: [ MRI ]
    features: [ multiprocess, increment, create, each_key, bulk_read, bulk_write ]
    description: "[PStore](http://ruby-doc.org/stdlib/libdoc/pstore/rdoc/PStore.html) store"
    notes:
      multiprocess: poor multiprocess performance
  - adapter: YAML
    platforms: [ MRI, JRuby ]
    features: [ multiprocess, increment, create, each_key ]
    description: "[YAML](http://www.ruby-doc.org/stdlib/libdoc/yaml/rdoc/YAML/Store.html) store"
    notes:
      multiprocess: poor multiprocess performance
  - adapter: Sqlite
    platforms: [ MRI ]
    gems: sqlite3
    features: [ multiprocess, increment, create, bulk_read, bulk_write, each_key ]
    description: "[Sqlite3](http://sqlite.org/) database"
    unknown: [ threadsafe ]
    notes:
      multiprocess: poor multiprocess performance
  - adapter: Daybreak
    platforms: [ MRI, JRuby ]
    gems: daybreak
    features: [ multiprocess, increment, create, each_key, bulk_write ]
    description: "Incredibly fast pure-ruby key/value store [Daybreak](http://propublica.github.com/daybreak/)"
  - adapter: DBM
    platforms: [ MRI ]
    features: [ increment, create, each_key, bulk_read, bulk_write ]
    description: "[Berkeley DB using DBM interface or NDBM (Depends on Ruby environment)](http://www.ruby-doc.org/stdlib/libdoc/dbm/rdoc/DBM.html)"
  - adapter: GDBM
    platforms: [ MRI, JRuby ]
    features: [ increment, create, each_key, bulk_read, bulk_write ]
    description: "[GDBM](http://www.ruby-doc.org/stdlib/libdoc/gdbm/rdoc/GDBM.html) database"
  - adapter: LevelDB
    platforms: [ MRI ]
    gems: leveldb
    features: [ increment, create, each_key, bulk_read, bulk_write ]
    description: "[LevelDB](http://code.google.com/p/leveldb/) database"
  - adapter: SDBM
    platforms: [ MRI ]
    features: [ increment, create, each_key, bulk_read, bulk_write ]
    description: "[SDBM](http://www.ruby-doc.org/stdlib/libdoc/sdbm/rdoc/SDBM.html) database"
  - adapter: TDB
    platforms: [ MRI ]
    gems: tdb
    features: [ increment, create, each_key ]
    description: "[TDB](http://tdb.samba.org/) database"
  - adapter: KyotoCabinet
    platforms: [ MRI ]
    gems: kyotocabinet-ruby or kyotocabinet-ruby-reanimated
    features: [ increment, create, each_key, bulk_read, bulk_write ]
    description: "[KyotoCabinet](http://fallabs.com/kyotocabinet/) database"
  - adapter: TokyoCabinet
    platforms: [ MRI ]
    gems: tokyocabinet
    features: [ increment, create, each_key ]
    description: "[TokyoCabinet](http://fallabs.com/tokyocabinet/) database"
  - adapter: DataMapper
    platforms: [ MRI ]
    gems: dm-core, dm-migrations
    features: [ threadsafe, multiprocess, create ]
    description: "[DataMapper](http://datamapper.org/) ORM"
  - adapter: Couch
    platforms: [ MRI, JRuby ]
    gems: faraday, multi_json
    features: [ multiprocess, create, each_key, bulk_read, bulk_write ]
    description: "[CouchDB](http://couchdb.apache.org/) database"
  - adapter: HBase
    platforms: [ Unstable ]
    gems: hbaserb
    features: [ multiprocess, increment ]
    unknown: [threadsafe]
    description: "[HBase](http://hbase.apache.org/) database"
  - adapter: Cassandra
    platforms: [ MRI, JRuby ]
    gems: cassandra
    features: [ multiprocess, expires, each_key, bulk_read, bulk_write ]
    unknown: [threadsafe]
    description: "[Cassandra](http://cassandra.apache.org/) distributed database"
  - adapter: LocalMemCache
    platforms: [ MRI ]
    gems: localmemcache
    features: [ threadsafe, multiprocess ]
    description: "[LocalMemCache](http://localmemcache.rubyforge.org/) database"
  - adapter: Fog
    platforms: [ MRI, JRuby ]
    gems: fog
    features: [multiprocess]
    unknown: [threadsafe]
    description: "[Fog](http://fog.io/) cloud store"
  - adapter: Riak
    platforms: [ Unstable ]
    gems: riak-client
    features: [multiprocess]
    description: "[Riak](http://docs.basho.com/) database"
---
group: Non-persistent stores
notes:
  memcached protocol: >
    There are some servers which use the memcached protocol but which are persistent
    (e.g. [MemcacheDB](http://memcachedb.org/),
    [Kai](http://sourceforge.net/apps/mediawiki/kai),
    [IronCache](http://dev.iron.io/cache/reference/memcache/),
    [Roma](https://github.com/roma/roma/tree),
    [Flare](http://labs.gree.jp/Top/OpenSource/Flare-en.html) and
    [Kumofs](https://github.com/etolabo/kumofs))
  memcached backend: >
    This feature is only available if the dalli backend is selected
  in-memory multiprocess caveat: >
    Store is multi-process safe because it is an in-memory store, values are not
    shared between multiple processes
backends:
  - adapter: MemcachedDalli
    platforms: [ MRI, JRuby ]
    gems: dalli
    features: [ threadsafe, multiprocess, increment, create, expires, bulk_read, bulk_write ]
    description: "[Memcached](http://memcached.org/) database with Dalli library"
    notes:
      persist: memcached protocol
  - adapter: Memcached
    platforms: [ MRI ]
    gems: dalli or memcached
    features: [ multiprocess, increment, create, expires ]
    unknown: [ threadsafe, bulk_read, bulk_write, JRuby ]
    description: "[Memcached](http://memcached.org/) database"
    notes:
      persist: memcached protocol
      JRuby: memcached backend
      threadsafe: memcached backend
      bulk_read: memcached backend
      bulk_write: memcached backend
  - adapter: MemcachedNative
    platforms: [ MRI ]
    gems: memcached
    features: [ multiprocess, increment, create, expires ]
    description: "Memcached database with native library"
    notes:
      persist: memcached protocol
  - adapter: Cookie
    platforms: [ MRI, JRuby ]
    features: [ multiprocess, increment, create, expires, each_key ]
    description: "Cookie in memory store"
    notes:
      multiprocess: in-memory multiprocess caveat
  - adapter: LRUHash
    platforms: [ MRI, JRuby ]
    features: [ multiprocess, increment, create, each_key ]
    description: "LRU memory store"
    notes:
      multiprocess: in-memory multiprocess caveat
  - adapter: Memory
    platforms: [ MRI, JRuby ]
    features: [ multiprocess, increment, create, each_key, bulk_read, bulk_write ]
    description: Memory store
    notes:
      multiprocess: in-memory multiprocess caveat
  - adapter: "Null"
    platforms: [ MRI, JRuby ]
    features: [ threadsafe, multiprocess ]
    description: "No database"
---
group: Network clients
notes:
  depends on server: Depends on server
backends:
  - adapter: Client
    platforms: [ MRI, JRuby ]
    features: [multiprocess]
    unknown: [ increment, create, expires, persist ]
    description: "Moneta client adapter"
    notes:
      increment: depends on server
      create: depends on server
      expires: depends on server
      persist: depends on server
  - adapter: RestClient
    platforms: [ MRI, JRuby ]
    features: [ multiprocess ]
    unknown: [ persist ]
    description: "Moneta REST client adapter"
    notes:
      persist: depends on server
